'Declare Variables and Units
Dim Rs
Dim pHMult
Public BattV
Public PTemp_C
Public DOmV
Public DOppm
Public Cond
Public Ct
Public Temp_C
Public OBS500(4)
Public pH

Alias OBS500(1)=Turb_BS
Alias OBS500(2)=Turb_SS
Alias OBS500(3)=Temp_C_2
Alias OBS500(4)=WD_OBS

Units BattV=Volts
Units PTemp_C=Deg C
Units DOmV=mV
Units DOppm=ppm
Units Cond=mS/cm
Units Ct=mS/cm
Units Temp_C=Deg C
Units pH=pH
Units Turb_BS=FBU
Units Turb_SS=FNU
Units Temp_C_2=Deg C
Units WD_OBS=unitless

Public SerialOutString As String * 60
Public SerialInString As String * 50
Public OutputString As String * 50

Const Samples = 4
Public HexVar(5,Samples) As Long

Public State As Long = 0  'Estado del envio
Public SendFlag(1) As Boolean = False  'Flag de envio

'Define Data Tables
' DataTable(LogTable,True,-1)
'   Sample(1,SerialInString,String)
'   Sample(1,OutputString,String)
'   Sample(1,SerialOutString,String)
' EndTable

DataTable(SamplesDataTable,True,-1)
	DataInterval(0,120,Min,10)
	Average(1,DOmV,FP2,0)
	Average(1,DOppm,FP2,0)
	Average(1,Cond,FP2,0)
	Average(1,Ct,IEEE4,0)
	Average (1,Temp_C,FP2,0)
	Average(1,Turb_BS,FP2,0)
	Average(1,Turb_SS,FP2,0)
	Average(1,Temp_C_2,FP2,0)
	Average(1,WD_OBS,FP2,0)
	Average(1,pH,FP2,0)
EndTable

' DataTable(Hourly,True,-1)
' 	DataInterval(0,60,Min,10)
' 	Sample(1,DOmV,FP2)
' 	Sample(1,DOppm,FP2)
' 	Sample(1,Cond,FP2)
' 	Sample(1,Ct,IEEE4)
' 	Sample(1,Temp_C,FP2)
' 	Sample(1,Turb_BS,FP2)
' 	Sample(1,Turb_SS,FP2)
' 	Sample(1,Temp_C_2,FP2)
' 	Sample(1,WD_OBS,FP2)
' 	Sample(1,pH,FP2)
' EndTable

DataTable(Daily,True,-1)
	DataInterval(0,1440,Min,10)
	Minimum(1,BattV,FP2,False,False)
EndTable

Sub SetBinaryBufferSub
  Dim total As Long ' Checksum
  Dim batteryHex As Long
  ' Concateno la bateria y el id del reporte (en este caso 01)
  batteryHex = INT( (BattV - 10)* 10 ) ' (Vbat - 10) * 10
	total = (batteryHex AND &HFF) + &H01 ' Calculo la bateria y el id al checksum
	
	
  SerialOutBlock (ComRS232, (batteryHex << 16) OR (&H01 << 24), 2) ' Escribo el valor del id seguido de la bateria (ej 0x01 120)

	Dim i, j

	For j = 1 To Samples
	  If SamplesDataTable.DOppm_avg(1,j) <> NAN Then
  		HexVar(1,j) = (INT( SamplesDataTable.DOppm_avg(1,j) * 10 ))		'Oxigeno en (ppm * 10)
  		HexVar(2,j) = (INT( SamplesDataTable.Cond_Avg(1,j) * 1000 ))		'Conductividad en uS/cm = (mS/cm *1000)
  		HexVar(3,j) = (INT( SamplesDataTable.Temp_C_Avg(1,j) * 10 ))		'Tempeatura en grados * 10
  		HexVar(4,j) = (INT( SamplesDataTable.ph_Avg(1,j) * 10 ))  			'Ph en ph*10
  		HexVar(5,j) = (INT( SamplesDataTable.Turb_BS_Avg(1,j) / 10 ))	'Turb en FBU*10
		EndIf
	Next

	For j = 1 To Samples
		For i = 1 To 5
			total += (HexVar(i,j) AND &HFF) + ((HexVar(i,j) AND &HFF00)>> 8) ' Calculo de checksum
  		SerialOutBlock (ComRS232,HexVar(i,j)<< 16,2) ' Envio de la variable
		Next
	Next

	SerialOutBlock (ComRS232,total<< 16,2) ' Envio el checksum
	
EndSub

' Sensors sub
Sub SensorsSub
	'---------------------
	'	Datalogger
	'---------------------
	'Default CR800 Datalogger Battery Voltage measurement 'BattV'
	Battery(BattV)

	'Default CR800 Datalogger Wiring Panel Temperature measurement 'PTemp_C'
	PanelTemp(PTemp_C,_50Hz)

	'---------------------
	'	Oxigeno disuelto
	'---------------------
	'CS511 Dissolved Oxygen Probe measurements 'DOmV' and 'DOppm'
	VoltSe (DOmV,1,mV2500,2,1,0,_50Hz,1.0,0) 'Aca hice unos cambios (Nueva entrada: SE2)
	DOppm=DOmV*0.4963  'M = P(valor por tabla) /Â R(valor medido con M=1) = 10.03 / 20.21 = 0,4963

	'---------------------
	'	Conductividad
	'---------------------
	'CS547A Conductivity and Temperature Probe measurements 'Cond', 'Ct', and 'Temp_C'
    Const Rcable=15.48 'edit this value to the actual footage of cable on your sensor | 4' por ahora | 15.48 con el agregado de cable
    Const CellConstant=1.38 'edit this value with the Cell Constant (Kc) printed | 1,38 en nuestro caso
    'on the label of each sensor
    Const TempCoef=2 'see section 8 of the manual for an explanation of how
    'to more precisely determine the value of this coefficient

	'Make preliminary voltage measurement
	BrFull(Rs,1,mV2500,2,1,1,2500,True,True,0,250,-0.001,1)
	'Convert voltage measurement to resistance
	Rs=Rs/(1-Rs)
	'Make refined voltage measurement based on preliminary measurement
	Select Case Rs
		Case Is <1.8
			BrHalf(Rs,1,mV2500,4,1,1,2500,True,0,250,1,0)
		Case Is <9.25
			BrFull(Rs,1,mV2500,2,1,1,2500,True,True,0,250,-0.001,1)
		Case Is <280
			BrFull(Rs,1,mV250,2,1,1,2500,True,True,0,250,-0.001,1)
	EndSelect
	'Convert voltage measurement to resistance
	Rs=Rs/(1-Rs)
	'Subtract resistance errors
	Rs=Rs-(Rcable*0.000032+0.005)
	'Calculate EC
	Ct=(1/Rs)*CellConstant
	'Correct EC for ionization errors
	If Ct<0.474 Then
		Ct=Ct*0.95031-0.00378
	Else
		Ct=-0.02889+(0.98614*Ct)+(0.02846*Ct^2)
	EndIf
	'Make temperature measurement (Deg C)
	Therm107(Temp_C,1,1,2,0,250,1,0)
	'Correct EC for temperature errors
	Cond=(Ct*100)/((Temp_C-25)*TempCoef+100)
	'Trap measurements below 0.005 mS/cm threshold
	If Cond<0.005 Then Cond=0.005

	'---------------------
	'	Turbidez
	'---------------------
	'OBS500/OBS501 Smart Turbidity Meter (SDI-12) measurements 'Turb_BS', 'Turb_SS', 'Temp_C', and 'WD_OBS'
	If TimeIntoInterval(0,1,Hr) Then
		SDI12Recorder(OBS500(),3,"0","M!",1,0,-1)
	EndIf

	'---------------------
	'	PH
	'---------------------
	'CSIM11 pH Probe (ISI M11-pH) measurement 'pH'
	'Calculate temperature correction multiplier
	pHMult=-1/(((Temp_C+273)/298)*59)
	'Make pH measurement
	VoltDiff(pH,1,mV2500,3,True,0,_50Hz,pHMult,6.91) ' Aca modifique el offset
EndSub


Sub SendReportSub
	Dim response As String * 30
	Public count As Long
	count = 0

    Select Case State
        Case Is = 0
            SerialOutString = "AT+SBDD0"& CHR(13) & CHR(10)& ""
            SerialOut(ComRS232,SerialOutString,"",0,100)
            State = State + 1
        Case Is = 1
            response = "OK"
          If(InStr(1,SerialInString,response,2)) Then
              State = State + 1
          Else
              State = State - 1
          EndIf
        Case Is = 2
            SerialOutString = "AT+SBDWB=" & (10*Samples + 2) & CHR(13) & CHR(10)& ""
            SerialOut(ComRS232,SerialOutString,"",0,100)
            State = State + 1
        Case Is = 3
            response = "READY"
            If(InStr(1,SerialInString,response,2)) Then
                SetBinaryBufferSub()	'Estructuracion de datos binarios
                State = State + 1
            Else
                State = State - 1
            EndIf
        Case Is = 4
            response = "0"
            If(InStr(1,SerialInString,response,2)) Then
                State = State + 1
            Else
                State = State - 1
            EndIf
        Case Is = 5
            SerialOutString = "AT+SBDIX"& CHR(13) & CHR(10)& ""
            SerialOut(ComRS232,SerialOutString,"",0,100)
            State = State + 1
        Case Is = 6
          response = "+SBDIX: "
          Dim comp As Long
          comp = InStr(1,SerialInString,response,2)
          comp = HexToDec(Mid (SerialInString, comp+8, 2))
          
          
          If(comp < 3) Then
            State = 0
            SendFlag(1) = False
      			SerialOutString = "AT+SBDWT=A" & CHR(13) & CHR(10)& ""
      			SerialOut(ComRS232,SerialOutString,"",0,100)
          Else
            State = State - 1
          EndIf

    EndSelect

    count += 1
    If (count > 30) Then
        State = 0
        SendFlag(1) = False
        SerialOutString = "AT+SBDWT=A" & CHR(13) & CHR(10)& ""
        SerialOut(ComRS232,SerialOutString,"",0,100)
    EndIf

EndSub

Sub SendAlertSub
  SerialOutString = "AT+SBDIX"& CHR(13) & CHR(10)& ""
  SerialOut(ComRS232,SerialOutString,"",0,100)
EndSub

Const SendInterval = 8 'Intervalo entre envios en hs
Public alarm As Float

'Main Program
BeginProg
    'Setup Scan
    Scan(30,Sec,1,1)
        SerialOpen(ComRS232,19200,0,0,10000) 'Open a serial port

        SerialOutString = "AT+SBDWT=A" & CHR(13) & CHR(10)& ""
        SerialOut(ComRS232,SerialOutString,"",0,100)

    NextScan

	'Main Scan
	Scan(30,Sec,1,0)
		SensorsSub()	'Lectura de sensores
		
    PulseCount (alarm,1,1 ,2,0,1.0,0)	'Chequeo de alarma antivandalica
    If alarm Then
    	SendAlertSub() ' Envia la alerta
    EndIf    
		
		SerialOpen(ComRS232,19200,0,0,10000) 'Open a serial port
		SerialInRecord(ComRS232,SerialInString,0,0,0,"",01)
	
		If TimeIntoInterval (0,SendInterval,Hr) Then
  		    SendFlag(1)=true  'Activa la rutina de envio
		EndIf
		
		If(SendFlag(1)) Then
		    SendReportSub()
 		    ' CallTable LogTable
		EndIf

		'Call Data Tables and Store Data
		CallTable SamplesDataTable
		' CallTable Hourly
		CallTable Daily
	NextScan
	
EndProg